"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[600],{8225:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>l,default:()=>j,frontMatter:()=>d,metadata:()=>a,toc:()=>x});var i=t(4246),r=t(1670),s=t(2536),c=t(3930),o=t(9798);const d={title:"API",description:"mocq's api",sidebar_position:4},l=void 0,a={id:"api",title:"API",description:"mocq's api",source:"@site/docs/api.mdx",sourceDirName:".",slug:"/api",permalink:"/mocq/docs/api",draft:!1,unlisted:!1,editUrl:"https://github.com/nxzq/mocq/tree/main/website/docs/api.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"API",description:"mocq's api",sidebar_position:4},sidebar:"docsSidebar",previous:{title:"Usage with Static Data",permalink:"/mocq/docs/examples/static-data"},next:{title:"Debug",permalink:"/mocq/docs/debug"}},h={},x=[{value:"Config",id:"config",level:2},{value:"generator - <code>required</code>",id:"generator---required",level:3},{value:"type",id:"type",level:4},{value:"function parameters",id:"function-parameters",level:4},{value:"count - <code>required</code>",id:"count---required",level:3},{value:"allowed values",id:"allowed-values",level:4},{value:"connections - <code>optional</code>",id:"connections---optional",level:3},{value:"types",id:"types",level:4},{value:"function parameters",id:"function-parameters-1",level:4},{value:"handler - <code>optional</code>",id:"handler---optional",level:3},{value:"type",id:"type-1",level:4},{value:"function parameters",id:"function-parameters-2",level:4}];function u(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"[mocq]"})," configuration spec"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"config",children:"Config"}),"\n","\n",(0,i.jsx)(s.Z,{language:"ts",children:"/** @see MocQ for implementation details */\ninterface Config {\n  [key: string]: MocQ<object>\n}\n\ntype MocQ<T extends object> = {\n  generator: DataGenerator<T>\n  count: number\n  connections?: {\n    [connectionKey: string]: DataConnection<T>\n  }\n  handler?: DataHandler<T>\n}"}),"\n","\n","\n",(0,i.jsxs)(n.admonition,{title:"Strict Type Checking",type:"info",children:[(0,i.jsxs)(n.p,{children:["when working with ",(0,i.jsx)(n.a,{href:"https://www.typescriptlang.org/",children:"TypeScript"})," it's best practice to utilize the ",(0,i.jsx)(n.code,{children:"MocQ"}),"\ntype to explicitly type your configuration"]}),(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["without an explicit type ",(0,i.jsx)(n.code,{children:"[mocq]"})," will attempt to infer the key type from the return of the generator function"]}),"\n"]}),(0,i.jsxs)(c.Z,{children:[(0,i.jsx)(o.Z,{value:"type",label:"Create Custom Type",default:!0,children:(0,i.jsx)(s.Z,{language:"ts",title:"/index.ts",showLineNumbers:!0,children:"import { mocq, MocQ } from 'mocq';\nimport { User, Node } from './types';\n\ntype customMocqConfig: {\n  users: MocQ<User>,\n  nodes: MocQ<Node>,\n};\n\nconst config: customMocqConfig = {\n  /* ... */\n};\n\nconst { generate, execute } = mocq(config);"})}),(0,i.jsx)(o.Z,{value:"assertion",label:"Type Assertion",children:(0,i.jsx)(s.Z,{language:"ts",title:"/index.ts",showLineNumbers:!0,children:"import { mocq, MocQ } from 'mocq';\nimport { User, Node } from './types';\n\nconst config = {\n  users: {\n    /* ... */\n  } as MocQ<User>,\n  nodes: {\n    /* ... */\n  } as MocQ<Node>,\n};\n\nconst { generate, execute } = mocq(config);"})})]})]}),"\n",(0,i.jsxs)(n.h3,{id:"generator---required",children:["generator - ",(0,i.jsx)(n.code,{children:"required"})]}),"\n",(0,i.jsxs)(n.p,{children:["generic ",(0,i.jsx)(n.em,{children:"synchronous"})," function that returns a single instance of a data object"]}),"\n",(0,i.jsx)(n.h4,{id:"type",children:"type"}),"\n",(0,i.jsx)(s.Z,{language:"ts",children:"type DataGenerator<T> = (index: number) => T"}),"\n",(0,i.jsx)(n.h4,{id:"function-parameters",children:"function parameters"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"name"}),(0,i.jsx)(n.th,{style:{textAlign:"center"},children:"description"}),(0,i.jsx)(n.th,{style:{textAlign:"right"},children:"type"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"index"})}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"index of current data object being created, utilize the index for fields requiring uniqueness"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:(0,i.jsx)(n.code,{children:"number"})})]})})]}),"\n",(0,i.jsxs)(n.h3,{id:"count---required",children:["count - ",(0,i.jsx)(n.code,{children:"required"})]}),"\n",(0,i.jsx)(n.p,{children:"number of desired data objects"}),"\n",(0,i.jsx)(n.h4,{id:"allowed-values",children:"allowed values"}),"\n",(0,i.jsx)(s.Z,{language:"ts",children:"number > 0"}),"\n",(0,i.jsxs)(n.h3,{id:"connections---optional",children:["connections - ",(0,i.jsx)(n.code,{children:"optional"})]}),"\n",(0,i.jsxs)(n.p,{children:["key-value pairs allowing for the ability to ",(0,i.jsx)(n.em,{children:"hook into the generated data of configuration by key"})," and augment data per instance of current data type"]}),"\n",(0,i.jsx)(n.h4,{id:"types",children:"types"}),"\n",(0,i.jsx)(s.Z,{language:"ts",children:"{ \n  [connectionKey: string]: DataConnection<T>\n}"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"connectionKey"})," must be present in top level config"]}),"\n"]}),"\n",(0,i.jsx)(s.Z,{language:"ts",children:"type DataConnection<T> = (connectionKeyData: X[], index: number, indexData: T) => Partial<T>"}),"\n",(0,i.jsxs)(n.p,{children:["generic ",(0,i.jsx)(n.em,{children:"synchronous"})," function that returns a partial of a data object to be spread onto generated data"]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["see ",(0,i.jsx)(n.a,{href:"/docs/#data-resolution",children:"data resolution"})," for more info"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"function-parameters-1",children:"function parameters"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"name"}),(0,i.jsx)(n.th,{style:{textAlign:"center"},children:"description"}),(0,i.jsx)(n.th,{style:{textAlign:"right"},children:"type"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"connectionKeyData"})}),(0,i.jsxs)(n.td,{style:{textAlign:"center"},children:[(0,i.jsx)(n.a,{href:"/docs/#data-resolution",children:"resolved data"})," array for config key specified as the connection key, type will match the corresponding type of connection key data"]}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:(0,i.jsx)(n.code,{children:"X[]"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"index"})}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"index of current data object being manipulated"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:(0,i.jsx)(n.code,{children:"number"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"indexData"})}),(0,i.jsx)(n.td,{style:{textAlign:"center"},children:"data of current data object being created"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:(0,i.jsx)(n.code,{children:"T"})})]})]})]}),"\n",(0,i.jsxs)(n.h3,{id:"handler---optional",children:["handler - ",(0,i.jsx)(n.code,{children:"optional"})]}),"\n",(0,i.jsxs)(n.p,{children:["function to be ran when ",(0,i.jsx)(n.code,{children:"execute"})," is called"]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["can be ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.code,{children:"sync"})})," or ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.code,{children:"async"})})]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"type-1",children:"type"}),"\n",(0,i.jsx)(s.Z,{language:"ts",children:"type DataHandler<T> = (data: T[]) => Promise<void> | void"}),"\n",(0,i.jsx)(n.h4,{id:"function-parameters-2",children:"function parameters"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"name"}),(0,i.jsx)(n.th,{style:{textAlign:"center"},children:"description"}),(0,i.jsx)(n.th,{style:{textAlign:"right"},children:"type"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"data"})}),(0,i.jsxs)(n.td,{style:{textAlign:"center"},children:[(0,i.jsx)(n.a,{href:"/docs/#data-resolution",children:"resolved data"})," array for config key"]}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:(0,i.jsx)(n.code,{children:"T[]"})})]})})]}),"\n",(0,i.jsxs)(n.admonition,{type:"note",children:[(0,i.jsxs)(n.mdxAdmonitionTitle,{children:["need to utilize a common ",(0,i.jsx)(n.em,{children:"connection/transaction"})," between handlers?"]}),(0,i.jsxs)(n.p,{children:["utilize same pattern used by the ",(0,i.jsx)(n.a,{href:"/docs/examples/database-load#database-load-function",children:"Database Load Example"})]})]})]})}function j(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}}}]);