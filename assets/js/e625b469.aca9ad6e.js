"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[619],{4470:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>g,contentTitle:()=>c,default:()=>p,frontMatter:()=>l,metadata:()=>d,toc:()=>m});var a=t(4246),s=t(1670),r=t(3930),i=t(9798),o=t(2536);const l={sidebar_position:1,title:"Basic Usage",description:"basic usage use-case"},c=void 0,d={id:"examples/basic-usage",title:"Basic Usage",description:"basic usage use-case",source:"@site/docs/examples/basic-usage.mdx",sourceDirName:"examples",slug:"/examples/basic-usage",permalink:"/mocq/docs/examples/basic-usage",draft:!1,unlisted:!1,editUrl:"https://github.com/nxzq/mocq/tree/main/website/docs/examples/basic-usage.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Basic Usage",description:"basic usage use-case"},sidebar:"docsSidebar",previous:{title:"Examples",permalink:"/mocq/docs/examples"},next:{title:"Database Load",permalink:"/mocq/docs/examples/database-load"}},g={},m=[{value:"Getting Started",id:"getting-started",level:2},{value:"Generating Data",id:"generating-data",level:2},{value:"Connecting Data",id:"connecting-data",level:2},{value:"Configuration",id:"configuration",level:2}];function u(e){const n={blockquote:"blockquote",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,a.jsxs)(n.p,{children:["For this example we have three types ",(0,a.jsx)(n.code,{children:"Users"}),", ",(0,a.jsx)(n.code,{children:"Tags"})," and ",(0,a.jsx)(n.code,{children:"Elements"})]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"Tags"})," and ",(0,a.jsx)(n.code,{children:"Elements"})," are both created_by ",(0,a.jsx)(n.code,{children:"Users"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"Elements"})," include a list of ",(0,a.jsx)(n.code,{children:"Tags"})]}),"\n"]}),"\n","\n","\n",(0,a.jsxs)(r.Z,{groupId:"code-block-language",children:[(0,a.jsx)(i.Z,{value:"js",label:"JavaScript",children:(0,a.jsx)(o.Z,{language:"ts",children:"type User = {\n  alias: string\n  first_name: string\n  last_name: string\n};\ntype Tag = {\n  id: string\n  name: string\n  created_by: string\n};\ntype Element = {\n  id: string\n  name: string\n  tags: Tag[]\n  created_by: string\n};"})}),(0,a.jsx)(i.Z,{value:"ts",label:"TypeScript",children:(0,a.jsx)(o.Z,{language:"ts",title:"/types.ts",showLineNumbers:!0,children:"export type User = {\n  alias: string\n  first_name: string\n  last_name: string\n};\nexport type Tag = {\n  id: string\n  name: string\n  created_by: string\n};\nexport type Element = {\n  id: string\n  name: string\n  tags: Tag[]\n  created_by: string\n};"})})]}),"\n",(0,a.jsx)(n.h2,{id:"generating-data",children:"Generating Data"}),"\n",(0,a.jsx)(n.p,{children:"Here are our base data generators"}),"\n",(0,a.jsxs)(r.Z,{groupId:"code-block-language",children:[(0,a.jsx)(i.Z,{value:"js",label:"JavaScript",children:(0,a.jsx)(o.Z,{language:"js",title:"/generators.js",showLineNumbers:!0,children:"export const generateMockUser = (i) => ({\n  alias: `alias_${i}`,\n  first_name: `first_name_${i}`,\n  last_name: `last_name_${i}`\n});\n\nexport const generateMockTag = (i) => ({\n  id: `t${`0000000000000${i}`.slice(-9)}`,\n  name: `tag_name_${i}`,\n  created_by: 'unknown'\n});\n\nexport const generateMockElement = (i) => ({\n  id: `e${`0000000000000${i}`.slice(-9)}`,\n  name: `element_name_${i}`,\n  tags: [],\n  created_by: 'unknown'\n});"})}),(0,a.jsx)(i.Z,{value:"ts",label:"TypeScript",children:(0,a.jsx)(o.Z,{language:"ts",title:"/generators.ts",showLineNumbers:!0,children:"import { User, Tag, Element } from './types';\n\nexport function generateMockUser(i: number): User {\n  return {\n    alias: `alias_${i}`,\n    first_name: `first_name_${i}`,\n    last_name: `last_name_${i}`,\n  };\n});\n\nexport function generateMockTag(i: number): Tag {\n  return {\n    id: `t${`0000000000000${i}`.slice(-9)}`,\n    name: `tag_name_${i}`,\n    created_by: 'unknown',\n  };\n});\n\nexport function generateMockElement(i: number): Element {\n  return {\n    id: `e${`0000000000000${i}`.slice(-9)}`,\n    name: `element_name_${i}`,\n    tags: [],\n    created_by: 'unknown'\n  };\n};"})})]}),"\n",(0,a.jsx)(n.h2,{id:"connecting-data",children:"Connecting Data"}),"\n",(0,a.jsx)(n.p,{children:"We don't really care how our data is connected just that it is in some way, a great time for randomness"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"we will use this helper functions to grab a random element out of an array"}),"\n"]}),"\n",(0,a.jsxs)(r.Z,{groupId:"code-block-language",children:[(0,a.jsx)(i.Z,{value:"js",label:"JavaScript",children:(0,a.jsx)(o.Z,{language:"js",title:"/utils.js",showLineNumbers:!0,children:"export const getRandomArrElement = (data) => {\n  return data[Math.floor(Math.random() * data.length)]\n};\n\nexport const getRandomArrElements = (data, maxCount) => {\n  return [...new Set(...new Array(maxCount).map(() => getRandomArrElement(data)))]\n};"})}),(0,a.jsx)(i.Z,{value:"ts",label:"TypeScript",children:(0,a.jsx)(o.Z,{language:"ts",title:"/utils.ts",showLineNumbers:!0,children:"export function getRandomArrElement<T>(data: T[]) {\n  return data[Math.floor(Math.random() * data.length)]\n};\n\nexport function getRandomArrElements<T>(data: T[], maxCount: number): T[] {\n  return [...new Set(...new Array(maxCount).map(() => getRandomArrElement(data)))] as T[]\n};"})})]}),"\n",(0,a.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,a.jsxs)(r.Z,{groupId:"code-block-language",children:[(0,a.jsx)(i.Z,{value:"js",label:"JavaScript",children:(0,a.jsx)(o.Z,{language:"js",title:"/index.js",showLineNumbers:!0,children:"import { mocq } from \"mocq\";\nimport { generateMockUser, generateMockTag, generateMockElement } from './generators';\nimport { getRandomArrElement, getRandomArrElements } from './utils';\n\nconst { generate } = mocq({\n  users: {\n    generator: generateMockUser,\n    count: 25\n  },\n  tags: {\n    generator: generateMockTag,\n      count: 25,\n      connections: {\n        users: (users)=>({ created_by: getRandomArrElement(users).alias }),\n      }\n  },\n  elements: {\n    generator: generateMockElement,\n      count: 100,\n      connections: {\n        users: (users)=>({ created_by: getRandomArrElement(users).alias }),\n        tags: (tags)=>({ tags: getRandomArrElements(tags, 2).map(x => x.id) }),\n      }\n  },\n});\n\nconst { data: { users, tags, elements} } = generate();"})}),(0,a.jsx)(i.Z,{value:"ts",label:"TypeScript",children:(0,a.jsx)(o.Z,{language:"ts",title:"/index.ts",showLineNumbers:!0,children:"import { mocq, MocQ } from \"mocq\";\nimport { User, Tag, Element } from './types';\nimport { generateMockUser, generateMockTag, generateMockElement } from './generators';\nimport { getRandomArrElement, getRandomArrElements } from './utils';\n\nconst { generate } = mocq({\n  users: {\n    generator: generateMockUser,\n    count: 25\n  } as MocQ<User>,\n  tags: {\n    generator: generateMockTag,\n      count: 25,\n      connections: {\n        users: (data: User[])=>({ created_by: getRandomArrElement(data).alias }),\n      },\n  } as MocQ<Tag>,\n  elements: {\n    generator: generateMockElement,\n      count: 100,\n      connections: {\n        users: (data: User[])=>({ created_by: getRandomArrElement(data).alias }),\n        tags: (data: Tag[])=>({ tags: getRandomArrElements(data, 2).map(x => x.id) }),\n      }\n  } as MocQ<Element>,\n});\n\nconst { data: { users, tags, elements} } = generate();"})})]}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)("summary",{children:(0,a.jsx)(n.p,{children:"Sample Resolved Data"})}),(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"users"}),":"]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:'[\n  {\n    alias: "alias_0",\n    first_name: "first_name_0",\n    last_name: "last_name_0"\n  },\n  // ... 24 more entries\n]\n'})}),(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"tags"}),":"]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:'[\n  {\n    id: "t000000000",\n    name: "tag_name_0",\n    created_by: "alias_1"\n  },\n  // ... 24 more entries\n]\n'})}),(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"elements"}),":"]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:'[\n  {\n    id: "e000000099",\n    name: "element_name_99",\n    tags: [ "t000000001", "t000000000" ],\n    created_by: "alias_21"\n  },\n  // ... 99 more entries\n]\n'})})]})]})}function p(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}}}]);